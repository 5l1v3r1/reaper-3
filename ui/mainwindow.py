# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1082, 699)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStatusTip("")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1082, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuOpen = QtWidgets.QMenu(self.menuFile)
        self.menuOpen.setEnabled(False)
        self.menuOpen.setObjectName("menuOpen")
        self.menuBackups = QtWidgets.QMenu(self.menuOpen)
        self.menuBackups.setEnabled(False)
        self.menuBackups.setObjectName("menuBackups")
        self.menuSave = QtWidgets.QMenu(self.menuFile)
        self.menuSave.setEnabled(False)
        self.menuSave.setObjectName("menuSave")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionAPI_Key_file = QtWidgets.QAction(MainWindow)
        self.actionAPI_Key_file.setObjectName("actionAPI_Key_file")
        self.actionScraping_state = QtWidgets.QAction(MainWindow)
        self.actionScraping_state.setEnabled(False)
        self.actionScraping_state.setObjectName("actionScraping_state")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionLicenses = QtWidgets.QAction(MainWindow)
        self.actionLicenses.setObjectName("actionLicenses")
        self.actionAPI_Keys = QtWidgets.QAction(MainWindow)
        self.actionAPI_Keys.setObjectName("actionAPI_Keys")
        self.actionJob_Queue = QtWidgets.QAction(MainWindow)
        self.actionJob_Queue.setEnabled(False)
        self.actionJob_Queue.setObjectName("actionJob_Queue")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setEnabled(True)
        self.actionSettings.setObjectName("actionSettings")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionReport_a_bug = QtWidgets.QAction(MainWindow)
        self.actionReport_a_bug.setObjectName("actionReport_a_bug")
        self.actionScraping = QtWidgets.QAction(MainWindow)
        self.actionScraping.setCheckable(True)
        self.actionScraping.setChecked(True)
        self.actionScraping.setObjectName("actionScraping")
        self.actionHistory = QtWidgets.QAction(MainWindow)
        self.actionHistory.setCheckable(True)
        self.actionHistory.setObjectName("actionHistory")
        self.actionHistory_2 = QtWidgets.QAction(MainWindow)
        self.actionHistory_2.setEnabled(False)
        self.actionHistory_2.setObjectName("actionHistory_2")
        self.actionAPI_Key_Database = QtWidgets.QAction(MainWindow)
        self.actionAPI_Key_Database.setEnabled(False)
        self.actionAPI_Key_Database.setObjectName("actionAPI_Key_Database")
        self.actionAdvanced_mode = QtWidgets.QAction(MainWindow)
        self.actionAdvanced_mode.setCheckable(True)
        self.actionAdvanced_mode.setObjectName("actionAdvanced_mode")
        self.actionWebsite = QtWidgets.QAction(MainWindow)
        self.actionWebsite.setObjectName("actionWebsite")
        self.actionQueue = QtWidgets.QAction(MainWindow)
        self.actionQueue.setObjectName("actionQueue")
        self.actionJob = QtWidgets.QAction(MainWindow)
        self.actionJob.setObjectName("actionJob")
        self.actionDark_mode = QtWidgets.QAction(MainWindow)
        self.actionDark_mode.setCheckable(True)
        self.actionDark_mode.setObjectName("actionDark_mode")
        self.actionErrorManager = QtWidgets.QAction(MainWindow)
        self.actionErrorManager.setObjectName("actionErrorManager")
        self.menuBackups.addAction(self.actionQueue)
        self.menuBackups.addAction(self.actionJob)
        self.menuOpen.addAction(self.actionAPI_Key_file)
        self.menuOpen.addAction(self.actionJob_Queue)
        self.menuOpen.addAction(self.actionScraping_state)
        self.menuOpen.addSeparator()
        self.menuOpen.addAction(self.menuBackups.menuAction())
        self.menuSave.addAction(self.actionAPI_Keys)
        self.menuFile.addAction(self.menuOpen.menuAction())
        self.menuFile.addAction(self.menuSave.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addAction(self.actionReport_a_bug)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionLicenses)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionWebsite)
        self.menuView.addAction(self.actionErrorManager)
        self.menuView.addAction(self.actionHistory_2)
        self.menuView.addAction(self.actionAPI_Key_Database)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionAdvanced_mode)
        self.menuView.addAction(self.actionDark_mode)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Reaper"))
        MainWindow.setStatusTip(_translate("MainWindow", "Visit http://reaper.social for help & tutorials"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuOpen.setTitle(_translate("MainWindow", "Open"))
        self.menuBackups.setTitle(_translate("MainWindow", "Backups"))
        self.menuSave.setTitle(_translate("MainWindow", "Save"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionAPI_Key_file.setText(_translate("MainWindow", "API Keys"))
        self.actionScraping_state.setText(_translate("MainWindow", "Scraping state"))
        self.actionAbout.setText(_translate("MainWindow", "About Reaper"))
        self.actionLicenses.setText(_translate("MainWindow", "Licenses"))
        self.actionAPI_Keys.setText(_translate("MainWindow", "API Keys"))
        self.actionJob_Queue.setText(_translate("MainWindow", "Job Queue"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionReport_a_bug.setText(_translate("MainWindow", "Report a bug"))
        self.actionScraping.setText(_translate("MainWindow", "Scraping"))
        self.actionHistory.setText(_translate("MainWindow", "History"))
        self.actionHistory_2.setText(_translate("MainWindow", "History"))
        self.actionAPI_Key_Database.setText(_translate("MainWindow", "API Key Database"))
        self.actionAdvanced_mode.setText(_translate("MainWindow", "Advanced mode"))
        self.actionWebsite.setText(_translate("MainWindow", "Website"))
        self.actionQueue.setText(_translate("MainWindow", "Queue"))
        self.actionJob.setText(_translate("MainWindow", "Job"))
        self.actionDark_mode.setText(_translate("MainWindow", "Dark mode"))
        self.actionErrorManager.setText(_translate("MainWindow", "Error manager"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

